/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: StackRPC.proto */

#ifndef PROTOBUF_C_StackRPC_2eproto__INCLUDED
#define PROTOBUF_C_StackRPC_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct StackRPC__V1__ControlRequest StackRPC__V1__ControlRequest;
typedef struct StackRPC__V1__ControlResponse StackRPC__V1__ControlResponse;
typedef struct StackRPC__V1__CueActionRequest StackRPC__V1__CueActionRequest;
typedef struct StackRPC__V1__CueActionResponse StackRPC__V1__CueActionResponse;
typedef struct StackRPC__V1__ListCuesRequest StackRPC__V1__ListCuesRequest;
typedef struct StackRPC__V1__ListCuesResponse StackRPC__V1__ListCuesResponse;
typedef struct StackRPC__V1__GetCuesRequest StackRPC__V1__GetCuesRequest;
typedef struct StackRPC__V1__GetCuesResponse StackRPC__V1__GetCuesResponse;
typedef struct StackRPC__V1__GetShowRequest StackRPC__V1__GetShowRequest;
typedef struct StackRPC__V1__GetShowResponse StackRPC__V1__GetShowResponse;
typedef struct StackRPC__V1__CueInfo StackRPC__V1__CueInfo;


/* --- enums --- */

/*
 * Enumeration of possible cue actions
 */
typedef enum _StackRPC__V1__CueAction {
  /*
   * Start the cue playing, if it isn't
   */
  STACK_RPC__V1__CUE_ACTION__Play = 0,
  /*
   * Pause the cue
   */
  STACK_RPC__V1__CUE_ACTION__Pause = 1,
  /*
   * Stop the cue
   */
  STACK_RPC__V1__CUE_ACTION__Stop = 2,
  /*
   * Stop all of the cues (cue_id is ignored)
   */
  STACK_RPC__V1__CUE_ACTION__StopAll = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STACK_RPC__V1__CUE_ACTION)
} StackRPC__V1__CueAction;
/*
 * Should match StackCueState in StackCue.h
 */
typedef enum _StackRPC__V1__CueState {
  STACK_RPC__V1__CUE_STATE__Stopped = 0,
  STACK_RPC__V1__CUE_STATE__Paused = 1,
  STACK_RPC__V1__CUE_STATE__Prepared = 2,
  STACK_RPC__V1__CUE_STATE__PlayingPre = 3,
  STACK_RPC__V1__CUE_STATE__PlayingAction = 4,
  STACK_RPC__V1__CUE_STATE__PlayingPost = 5,
  STACK_RPC__V1__CUE_STATE__Error = -1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STACK_RPC__V1__CUE_STATE)
} StackRPC__V1__CueState;
/*
 * Should match StackCueWaitTrigger in StackCue.h
 */
typedef enum _StackRPC__V1__CueWaitTrigger {
  STACK_RPC__V1__CUE_WAIT_TRIGGER__None = 0,
  STACK_RPC__V1__CUE_WAIT_TRIGGER__Immediate = 1,
  STACK_RPC__V1__CUE_WAIT_TRIGGER__AfterPre = 2,
  STACK_RPC__V1__CUE_WAIT_TRIGGER__AfterAction = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STACK_RPC__V1__CUE_WAIT_TRIGGER)
} StackRPC__V1__CueWaitTrigger;

/* --- messages --- */

typedef enum {
  STACK_RPC__V1__CONTROL_REQUEST__TYPE__NOT_SET = 0,
  STACK_RPC__V1__CONTROL_REQUEST__TYPE_CUE_ACTION_REQUEST = 2,
  STACK_RPC__V1__CONTROL_REQUEST__TYPE_LIST_CUES_REQUEST = 3,
  STACK_RPC__V1__CONTROL_REQUEST__TYPE_GET_CUES_REQUEST = 4,
  STACK_RPC__V1__CONTROL_REQUEST__TYPE_GET_SHOW_REQUEST = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STACK_RPC__V1__CONTROL_REQUEST__TYPE__CASE)
} StackRPC__V1__ControlRequest__TypeCase;

struct  StackRPC__V1__ControlRequest
{
  ProtobufCMessage base;
  uint64_t message_id;
  StackRPC__V1__ControlRequest__TypeCase type_case;
  union {
    StackRPC__V1__CueActionRequest *cue_action_request;
    StackRPC__V1__ListCuesRequest *list_cues_request;
    StackRPC__V1__GetCuesRequest *get_cues_request;
    StackRPC__V1__GetShowRequest *get_show_request;
  };
};
#define STACK_RPC__V1__CONTROL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__control_request__descriptor) \
    , 0, STACK_RPC__V1__CONTROL_REQUEST__TYPE__NOT_SET, {0} }


typedef enum {
  STACK_RPC__V1__CONTROL_RESPONSE__TYPE__NOT_SET = 0,
  STACK_RPC__V1__CONTROL_RESPONSE__TYPE_CUE_ACTION_RESPONSE = 2,
  STACK_RPC__V1__CONTROL_RESPONSE__TYPE_LIST_CUES_RESPONSE = 3,
  STACK_RPC__V1__CONTROL_RESPONSE__TYPE_GET_CUES_RESPONSE = 4,
  STACK_RPC__V1__CONTROL_RESPONSE__TYPE_GET_SHOW_RESPONSE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STACK_RPC__V1__CONTROL_RESPONSE__TYPE__CASE)
} StackRPC__V1__ControlResponse__TypeCase;

struct  StackRPC__V1__ControlResponse
{
  ProtobufCMessage base;
  uint64_t response_to;
  StackRPC__V1__ControlResponse__TypeCase type_case;
  union {
    StackRPC__V1__CueActionResponse *cue_action_response;
    StackRPC__V1__ListCuesResponse *list_cues_response;
    StackRPC__V1__GetCuesResponse *get_cues_response;
    StackRPC__V1__GetShowResponse *get_show_response;
  };
};
#define STACK_RPC__V1__CONTROL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__control_response__descriptor) \
    , 0, STACK_RPC__V1__CONTROL_RESPONSE__TYPE__NOT_SET, {0} }


/*
 * Tells a cue to do an action
 */
struct  StackRPC__V1__CueActionRequest
{
  ProtobufCMessage base;
  int64_t cue_id;
  StackRPC__V1__CueAction cue_action;
};
#define STACK_RPC__V1__CUE_ACTION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__cue_action_request__descriptor) \
    , 0, STACK_RPC__V1__CUE_ACTION__Play }


struct  StackRPC__V1__CueActionResponse
{
  ProtobufCMessage base;
};
#define STACK_RPC__V1__CUE_ACTION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__cue_action_response__descriptor) \
     }


/*
 * Requests a list of all the cue IDs
 */
struct  StackRPC__V1__ListCuesRequest
{
  ProtobufCMessage base;
  /*
   * Whether to include cue IDs of group cue children
   */
  protobuf_c_boolean include_children;
};
#define STACK_RPC__V1__LIST_CUES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__list_cues_request__descriptor) \
    , 0 }


/*
 * Responds with an ordered list of cue IDs
 */
struct  StackRPC__V1__ListCuesResponse
{
  ProtobufCMessage base;
  /*
   * Repeated cue UID
   */
  size_t n_cue_uid;
  int64_t *cue_uid;
};
#define STACK_RPC__V1__LIST_CUES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__list_cues_response__descriptor) \
    , 0,NULL }


/*
 * Requests information about a cue
 */
struct  StackRPC__V1__GetCuesRequest
{
  ProtobufCMessage base;
  /*
   * The cues to get the information for
   */
  size_t n_cue_uid;
  int64_t *cue_uid;
};
#define STACK_RPC__V1__GET_CUES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__get_cues_request__descriptor) \
    , 0,NULL }


/*
 * Response to GetCuesRequest
 */
struct  StackRPC__V1__GetCuesResponse
{
  ProtobufCMessage base;
  /*
   * Information about the cue
   */
  size_t n_cue_info;
  StackRPC__V1__CueInfo **cue_info;
};
#define STACK_RPC__V1__GET_CUES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__get_cues_response__descriptor) \
    , 0,NULL }


/*
 * Requests information about the show
 */
struct  StackRPC__V1__GetShowRequest
{
  ProtobufCMessage base;
};
#define STACK_RPC__V1__GET_SHOW_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__get_show_request__descriptor) \
     }


/*
 * Response to GetShowRequest
 */
struct  StackRPC__V1__GetShowResponse
{
  ProtobufCMessage base;
  /*
   * The name of the show
   */
  char *name;
  /*
   * The designer of the show
   */
  char *designer;
  /*
   * The revision of the show
   */
  char *revision;
  /*
   * The filename of the show
   */
  char *filename;
};
#define STACK_RPC__V1__GET_SHOW_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__get_show_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  StackRPC__V1__CueInfo
{
  ProtobufCMessage base;
  /*
   * The cue UID
   */
  int64_t uid;
  /*
   * Reserved for future use (parent group cue)
   */
  int64_t parent_uid;
  /*
   * The cue number
   */
  int32_t id;
  /*
   * The state of the cue
   */
  StackRPC__V1__CueState state;
  /*
   * The rendered name of the cue
   */
  char *name;
  /*
   * Prewait Time in nanoseconds
   */
  int64_t prewait_time;
  /*
   * Action Time in nanoseconds
   */
  int64_t action_time;
  /*
   * Postwait Time in nanoseconds
   */
  int64_t postwait_time;
  /*
   * Postwait trigger event
   */
  StackRPC__V1__CueWaitTrigger post_trigger;
  /*
   * RGBA-packed colour
   */
  int32_t colour;
  /*
   * Cue notes
   */
  char *notes;
  /*
   * Script reference
   */
  char *script_ref;
};
#define STACK_RPC__V1__CUE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stack_rpc__v1__cue_info__descriptor) \
    , 0, 0, 0, STACK_RPC__V1__CUE_STATE__Stopped, (char *)protobuf_c_empty_string, 0, 0, 0, STACK_RPC__V1__CUE_WAIT_TRIGGER__None, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* StackRPC__V1__ControlRequest methods */
void   stack_rpc__v1__control_request__init
                     (StackRPC__V1__ControlRequest         *message);
size_t stack_rpc__v1__control_request__get_packed_size
                     (const StackRPC__V1__ControlRequest   *message);
size_t stack_rpc__v1__control_request__pack
                     (const StackRPC__V1__ControlRequest   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__control_request__pack_to_buffer
                     (const StackRPC__V1__ControlRequest   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__ControlRequest *
       stack_rpc__v1__control_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__control_request__free_unpacked
                     (StackRPC__V1__ControlRequest *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__ControlResponse methods */
void   stack_rpc__v1__control_response__init
                     (StackRPC__V1__ControlResponse         *message);
size_t stack_rpc__v1__control_response__get_packed_size
                     (const StackRPC__V1__ControlResponse   *message);
size_t stack_rpc__v1__control_response__pack
                     (const StackRPC__V1__ControlResponse   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__control_response__pack_to_buffer
                     (const StackRPC__V1__ControlResponse   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__ControlResponse *
       stack_rpc__v1__control_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__control_response__free_unpacked
                     (StackRPC__V1__ControlResponse *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__CueActionRequest methods */
void   stack_rpc__v1__cue_action_request__init
                     (StackRPC__V1__CueActionRequest         *message);
size_t stack_rpc__v1__cue_action_request__get_packed_size
                     (const StackRPC__V1__CueActionRequest   *message);
size_t stack_rpc__v1__cue_action_request__pack
                     (const StackRPC__V1__CueActionRequest   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__cue_action_request__pack_to_buffer
                     (const StackRPC__V1__CueActionRequest   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__CueActionRequest *
       stack_rpc__v1__cue_action_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__cue_action_request__free_unpacked
                     (StackRPC__V1__CueActionRequest *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__CueActionResponse methods */
void   stack_rpc__v1__cue_action_response__init
                     (StackRPC__V1__CueActionResponse         *message);
size_t stack_rpc__v1__cue_action_response__get_packed_size
                     (const StackRPC__V1__CueActionResponse   *message);
size_t stack_rpc__v1__cue_action_response__pack
                     (const StackRPC__V1__CueActionResponse   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__cue_action_response__pack_to_buffer
                     (const StackRPC__V1__CueActionResponse   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__CueActionResponse *
       stack_rpc__v1__cue_action_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__cue_action_response__free_unpacked
                     (StackRPC__V1__CueActionResponse *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__ListCuesRequest methods */
void   stack_rpc__v1__list_cues_request__init
                     (StackRPC__V1__ListCuesRequest         *message);
size_t stack_rpc__v1__list_cues_request__get_packed_size
                     (const StackRPC__V1__ListCuesRequest   *message);
size_t stack_rpc__v1__list_cues_request__pack
                     (const StackRPC__V1__ListCuesRequest   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__list_cues_request__pack_to_buffer
                     (const StackRPC__V1__ListCuesRequest   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__ListCuesRequest *
       stack_rpc__v1__list_cues_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__list_cues_request__free_unpacked
                     (StackRPC__V1__ListCuesRequest *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__ListCuesResponse methods */
void   stack_rpc__v1__list_cues_response__init
                     (StackRPC__V1__ListCuesResponse         *message);
size_t stack_rpc__v1__list_cues_response__get_packed_size
                     (const StackRPC__V1__ListCuesResponse   *message);
size_t stack_rpc__v1__list_cues_response__pack
                     (const StackRPC__V1__ListCuesResponse   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__list_cues_response__pack_to_buffer
                     (const StackRPC__V1__ListCuesResponse   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__ListCuesResponse *
       stack_rpc__v1__list_cues_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__list_cues_response__free_unpacked
                     (StackRPC__V1__ListCuesResponse *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__GetCuesRequest methods */
void   stack_rpc__v1__get_cues_request__init
                     (StackRPC__V1__GetCuesRequest         *message);
size_t stack_rpc__v1__get_cues_request__get_packed_size
                     (const StackRPC__V1__GetCuesRequest   *message);
size_t stack_rpc__v1__get_cues_request__pack
                     (const StackRPC__V1__GetCuesRequest   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__get_cues_request__pack_to_buffer
                     (const StackRPC__V1__GetCuesRequest   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__GetCuesRequest *
       stack_rpc__v1__get_cues_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__get_cues_request__free_unpacked
                     (StackRPC__V1__GetCuesRequest *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__GetCuesResponse methods */
void   stack_rpc__v1__get_cues_response__init
                     (StackRPC__V1__GetCuesResponse         *message);
size_t stack_rpc__v1__get_cues_response__get_packed_size
                     (const StackRPC__V1__GetCuesResponse   *message);
size_t stack_rpc__v1__get_cues_response__pack
                     (const StackRPC__V1__GetCuesResponse   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__get_cues_response__pack_to_buffer
                     (const StackRPC__V1__GetCuesResponse   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__GetCuesResponse *
       stack_rpc__v1__get_cues_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__get_cues_response__free_unpacked
                     (StackRPC__V1__GetCuesResponse *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__GetShowRequest methods */
void   stack_rpc__v1__get_show_request__init
                     (StackRPC__V1__GetShowRequest         *message);
size_t stack_rpc__v1__get_show_request__get_packed_size
                     (const StackRPC__V1__GetShowRequest   *message);
size_t stack_rpc__v1__get_show_request__pack
                     (const StackRPC__V1__GetShowRequest   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__get_show_request__pack_to_buffer
                     (const StackRPC__V1__GetShowRequest   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__GetShowRequest *
       stack_rpc__v1__get_show_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__get_show_request__free_unpacked
                     (StackRPC__V1__GetShowRequest *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__GetShowResponse methods */
void   stack_rpc__v1__get_show_response__init
                     (StackRPC__V1__GetShowResponse         *message);
size_t stack_rpc__v1__get_show_response__get_packed_size
                     (const StackRPC__V1__GetShowResponse   *message);
size_t stack_rpc__v1__get_show_response__pack
                     (const StackRPC__V1__GetShowResponse   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__get_show_response__pack_to_buffer
                     (const StackRPC__V1__GetShowResponse   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__GetShowResponse *
       stack_rpc__v1__get_show_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__get_show_response__free_unpacked
                     (StackRPC__V1__GetShowResponse *message,
                      ProtobufCAllocator *allocator);
/* StackRPC__V1__CueInfo methods */
void   stack_rpc__v1__cue_info__init
                     (StackRPC__V1__CueInfo         *message);
size_t stack_rpc__v1__cue_info__get_packed_size
                     (const StackRPC__V1__CueInfo   *message);
size_t stack_rpc__v1__cue_info__pack
                     (const StackRPC__V1__CueInfo   *message,
                      uint8_t             *out);
size_t stack_rpc__v1__cue_info__pack_to_buffer
                     (const StackRPC__V1__CueInfo   *message,
                      ProtobufCBuffer     *buffer);
StackRPC__V1__CueInfo *
       stack_rpc__v1__cue_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stack_rpc__v1__cue_info__free_unpacked
                     (StackRPC__V1__CueInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*StackRPC__V1__ControlRequest_Closure)
                 (const StackRPC__V1__ControlRequest *message,
                  void *closure_data);
typedef void (*StackRPC__V1__ControlResponse_Closure)
                 (const StackRPC__V1__ControlResponse *message,
                  void *closure_data);
typedef void (*StackRPC__V1__CueActionRequest_Closure)
                 (const StackRPC__V1__CueActionRequest *message,
                  void *closure_data);
typedef void (*StackRPC__V1__CueActionResponse_Closure)
                 (const StackRPC__V1__CueActionResponse *message,
                  void *closure_data);
typedef void (*StackRPC__V1__ListCuesRequest_Closure)
                 (const StackRPC__V1__ListCuesRequest *message,
                  void *closure_data);
typedef void (*StackRPC__V1__ListCuesResponse_Closure)
                 (const StackRPC__V1__ListCuesResponse *message,
                  void *closure_data);
typedef void (*StackRPC__V1__GetCuesRequest_Closure)
                 (const StackRPC__V1__GetCuesRequest *message,
                  void *closure_data);
typedef void (*StackRPC__V1__GetCuesResponse_Closure)
                 (const StackRPC__V1__GetCuesResponse *message,
                  void *closure_data);
typedef void (*StackRPC__V1__GetShowRequest_Closure)
                 (const StackRPC__V1__GetShowRequest *message,
                  void *closure_data);
typedef void (*StackRPC__V1__GetShowResponse_Closure)
                 (const StackRPC__V1__GetShowResponse *message,
                  void *closure_data);
typedef void (*StackRPC__V1__CueInfo_Closure)
                 (const StackRPC__V1__CueInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    stack_rpc__v1__cue_action__descriptor;
extern const ProtobufCEnumDescriptor    stack_rpc__v1__cue_state__descriptor;
extern const ProtobufCEnumDescriptor    stack_rpc__v1__cue_wait_trigger__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__control_request__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__control_response__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__cue_action_request__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__cue_action_response__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__list_cues_request__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__list_cues_response__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__get_cues_request__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__get_cues_response__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__get_show_request__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__get_show_response__descriptor;
extern const ProtobufCMessageDescriptor stack_rpc__v1__cue_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_StackRPC_2eproto__INCLUDED */
