cmake_minimum_required(VERSION 3.12)
project(stack)
list(APPEND CMAKE_CXX_FLAGS "-std=c++0x -O3 -Werror=return-type")
#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
add_executable(runstack StackRingBuffer.cpp StackCue.cpp StackCueBase.cpp StackCueHelper.cpp StackCueList.cpp StackApp.cpp StackWindow.cpp StackShowSettings.cpp main.cpp StackAudioDevice.cpp)
set_target_properties(runstack PROPERTIES ENABLE_EXPORTS TRUE)
#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
add_library(StackPulseAudioDevice SHARED StackPulseAudioDevice.cpp)
add_library(StackAlsaAudioDevice SHARED StackAlsaAudioDevice.cpp)
add_library(StackActionCue SHARED StackActionCue.cpp)
add_library(StackFadeCue SHARED StackFadeCue.cpp)
add_library(StackAudioCue SHARED StackAudioCue.cpp MPEGAudioFile.cpp)
include(FindPkgConfig)
find_package(PkgConfig REQUIRED)
pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
find_package(PulseAudio REQUIRED)
find_package(Threads REQUIRED)
find_package(ALSA REQUIRED)
pkg_check_modules(JSONCPP REQUIRED jsoncpp)

## We need libdl for our plugin loading support
find_library(DL_LIBRARIES dl)

## LAME doesn't ship with a CMake file
find_path(LAME_INCLUDE_DIRS lame/lame.h)
find_library(LAME_LIBRARIES mp3lame)
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Lame DEFAULT_MSG LAME_INCLUDE_DIRS LAME_LIBRARIES)
list(APPEND LAME_DEFINITIONS -DHAVE_LIBMP3LAME=1)
mark_as_advanced(LAME_INCLUDE_DIRS LAME_LIBRARIES LAME_DEFINITIONS)

include_directories("${PROJECT_SOURCE_DIR}")
include_directories(${GTK3_INCLUDE_DIRS})
include_directories(${PULSEAUDIO_INCLUDE_DIRS})
include_directories(${JSONCPP_INCLUDE_DIRS})
include_directories(${LAME_INCLUDE_DIRS})
include_directories(${ALSA_INCLUDE_DIRS})
link_directories(${GTK3_LIBRARY_DIRS})
link_directories(${PULSEAUDIO_LIBRARY_DIR})
link_directories(${JSONCPP_LIBRARY_DIRS})
link_directories(${ALSA_LIBRARY_DIRS})
add_definitions(${GTK3_CFLAGS_OTHER})
target_link_libraries(StackAudioCue ${LAME_LIBRARIES})
target_link_libraries(StackPulseAudioDevice ${PULSEAUDIO_LIBRARY})
target_link_libraries(StackPulseAudioDevice ${PULSEAUDIO_MAINLOOP_LIBRARY})
target_link_libraries(StackAlsaAudioDevice ${ALSA_LIBRARY})
target_link_libraries(runstack ${GTK3_LIBRARIES})
target_link_libraries(runstack ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(runstack ${JSONCPP_LIBRARIES})
target_link_libraries(runstack ${LAME_LIBRARIES})
target_link_libraries(runstack ${DL_LIBRARIES})
